{"ast":null,"code":"import axios from'axios';// Настройка базового URL для API\nconst API=axios.create({baseURL:'http://localhost:5002/api',headers:{'Content-Type':'application/json'}});// Добавляем перехватчик запросов для токена аутентификации\nAPI.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['x-auth-token']=token;}return config;},error=>{return Promise.reject(error);});export default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject"],"sources":["/Users/macbook1/Programming/jsstoma/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Настройка базового URL для API\nconst API = axios.create({\n  baseURL: 'http://localhost:5002/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Добавляем перехватчик запросов для токена аутентификации\nAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['x-auth-token'] = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default API; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,2BAA2B,CACpCC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAAC,cAAc,CAAC,CAAGK,KAAK,CACxC,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAI,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}