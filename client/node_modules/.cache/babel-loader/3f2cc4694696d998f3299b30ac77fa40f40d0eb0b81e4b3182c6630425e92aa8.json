{"ast":null,"code":"import React,{useContext}from'react';import{Navigate,Outlet}from'react-router-dom';import{Center,Spinner}from'@chakra-ui/react';import AuthContext from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=()=>{const{isAuthenticated,isLoading}=useContext(AuthContext);if(isLoading){return/*#__PURE__*/_jsx(Center,{h:\"100vh\",children:/*#__PURE__*/_jsx(Spinner,{size:\"xl\",color:\"brand.500\",thickness:\"4px\"})});}return isAuthenticated?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};export default PrivateRoute;","map":{"version":3,"names":["React","useContext","Navigate","Outlet","Center","Spinner","AuthContext","jsx","_jsx","PrivateRoute","isAuthenticated","isLoading","h","children","size","color","thickness","to","replace"],"sources":["/Users/macbook1/Programming/jsstoma/client/src/components/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { Center, Spinner } from '@chakra-ui/react';\nimport AuthContext from '../context/AuthContext';\n\nconst PrivateRoute = () => {\n  const { isAuthenticated, isLoading } = useContext(AuthContext);\n\n  if (isLoading) {\n    return (\n      <Center h=\"100vh\">\n        <Spinner size=\"xl\" color=\"brand.500\" thickness=\"4px\" />\n      </Center>\n    );\n  }\n\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" replace />;\n};\n\nexport default PrivateRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,OAASC,MAAM,CAAEC,OAAO,KAAQ,kBAAkB,CAClD,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEC,eAAe,CAAEC,SAAU,CAAC,CAAGV,UAAU,CAACK,WAAW,CAAC,CAE9D,GAAIK,SAAS,CAAE,CACb,mBACEH,IAAA,CAACJ,MAAM,EAACQ,CAAC,CAAC,OAAO,CAAAC,QAAA,cACfL,IAAA,CAACH,OAAO,EAACS,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC,WAAW,CAACC,SAAS,CAAC,KAAK,CAAE,CAAC,CACjD,CAAC,CAEb,CAEA,MAAO,CAAAN,eAAe,cAAGF,IAAA,CAACL,MAAM,GAAE,CAAC,cAAGK,IAAA,CAACN,QAAQ,EAACe,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACxE,CAAC,CAED,cAAe,CAAAT,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}